import { useEffect, useState } from 'react';
import debounce from 'lodash.debounce'; 
import './App.css';
import logo from './logo.svg'; 
import './index.css'; 


function App() {
┬а // ­ЪДа Estados principales
┬а const [personajes, setPersonajes] = useState([]); ┬а 
┬а const [cargando, setCargando] = useState(true); ┬а ┬а 
┬а const [error, setError] = useState(null); ┬а ┬а ┬а ┬а ┬а 
┬а const [paginaActual, setPaginaActual] = useState(1); 
┬а const [busqueda, setBusqueda] = useState(''); ┬а ┬а ┬а ┬а
┬а const [totalPaginas, setTotalPaginas] = useState(null); 

┬а // ­ЪЋњ Funci├│n con debounce
┬а const handleBusquedaChange = debounce((valor) => {
┬а ┬а setBusqueda(valor);
┬а ┬а setPaginaActual(1); 
┬а }, 500);

┬а // ­ЪћЇ useEffect para cargar los personajes
┬а useEffect(() => {
┬а ┬а setCargando(true);
┬а ┬а setError(null);

┬а ┬а const url = busqueda
┬а ┬а ┬а ? `https://rickandmortyapi.com/api/character/?name=${encodeURIComponent(busqueda)}&page=${paginaActual}`
┬а ┬а ┬а : `https://rickandmortyapi.com/api/character/?page=${paginaActual}`;

┬а ┬а fetch(url)
┬а ┬а ┬а .then((res) => {
┬а ┬а ┬а ┬а if (res.status === 404) throw new Error('No se encontraron personajes con ese nombre.');
┬а ┬а ┬а ┬а if (!res.ok) throw new Error('Error al cargar los datos.');
┬а ┬а ┬а ┬а return res.json();
┬а ┬а ┬а })
┬а ┬а ┬а .then((data) => {
┬а ┬а ┬а ┬а setPersonajes(data.results);
┬а ┬а ┬а ┬а setTotalPaginas(data.info.pages);
┬а ┬а ┬а ┬а setCargando(false);
┬а ┬а ┬а })
┬а ┬а ┬а .catch((err) => {
┬а ┬а ┬а ┬а setError(err.message);
┬а ┬а ┬а ┬а setPersonajes([]); 
┬а ┬а ┬а ┬а setCargando(false);
┬а ┬а ┬а });
┬а }, [paginaActual, busqueda]);

┬а // ­ЪД╣ Cancelamos el debounce
┬а useEffect(() => {
┬а ┬а return () => {
┬а ┬а ┬а handleBusquedaChange.cancel();
┬а ┬а };
┬а }, []);

┬а // Renderizado de Cargando
┬а if (cargando) return <p style={{ textAlign: 'center', fontSize: '24px', color: '#c5f850', marginTop: '50px' }}>Cargando personajes...</p>;
┬а 
  // Renderizado de Error o No Encontrado
  if (error && personajes.length === 0) {
      return (
          <div style={{ textAlign: 'center', marginTop: '50px' }}>
            <p style={{ fontSize: '22px', color: '#ff66d0', textShadow: '0 0 5px rgba(255, 102, 208, 0.5)' }}>┬АWubba Lubba Dub Dub! Error: {error}</p>
            <button
              onClick={() => setBusqueda('') & setPaginaActual(1) & setError(null)} 
              className="btn-reload"
              style={{ marginTop: '15px' }}
            >
              Volver al inicio
            </button>
          </div>
      );
  }

┬а // ­Ъје Interfaz de usuario
┬а return (
┬а ┬а <div style={{ padding: '20px' }}>
┬а ┬а ┬а 
      {/* ­Ъќ╝№ИЈ Logo y T├Гtulo */}
      <div style={{ textAlign: 'center', marginBottom: '30px' }}>
        <img 
          src={logo} 
          alt="Rick and Morty Logo" 
          style={{ width: '150px', height: 'auto', marginBottom: '10px' }}
        />
        <h1>Rick and Morty - Personajes</h1>
      </div>

┬а ┬а ┬а {/* ­Ъћј Campo de b├║squeda */}
┬а ┬а ┬а <div style={{ textAlign: 'center', margin: '20px 0' }}>
┬а ┬а ┬а ┬а <input
┬а ┬а ┬а ┬а ┬а type="text"
┬а ┬а ┬а ┬а ┬а placeholder="Buscar personaje por nombre..."
┬а ┬а ┬а ┬а ┬а onChange={(e) => handleBusquedaChange(e.target.value)} 
┬а ┬а ┬а ┬а ┬а style={{
┬а ┬а ┬а ┬а ┬а ┬а padding: '10px',
┬а ┬а ┬а ┬а ┬а ┬а fontSize: '18px',
┬а ┬а ┬а ┬а ┬а ┬а width: '350px',
┬а ┬а ┬а ┬а ┬а ┬а borderRadius: '8px',
┬а ┬а ┬а ┬а ┬а }}
┬а ┬а ┬а ┬а />
┬а ┬а ┬а </div>

┬а ┬а ┬а {/* ­ЪЊё Paginaci├│n superior */}
┬а ┬а ┬а <div className="paginacion-contenedor">
┬а ┬а ┬а ┬а <button
┬а ┬а ┬а ┬а ┬а onClick={() => setPaginaActual((prev) => Math.max(prev - 1, 1))}
┬а ┬а ┬а ┬а ┬а disabled={paginaActual === 1}
┬а ┬а ┬а ┬а ┬а className="btn-paginacion"
┬а ┬а ┬а ┬а >
┬а ┬а ┬а ┬а ┬а &lt; Anterior
┬а ┬а ┬а ┬а </button>

┬а ┬а ┬а ┬а <span className="texto-paginacion">
┬а ┬а ┬а ┬а ┬а P├Аgina {paginaActual} de {totalPaginas}
┬а ┬а ┬а ┬а </span>

┬а ┬а ┬а ┬а <button
┬а ┬а ┬а ┬а ┬а onClick={() => setPaginaActual((prev) => Math.min(prev + 1, totalPaginas))}
┬а ┬а ┬а ┬а ┬а disabled={paginaActual === totalPaginas}
┬а ┬а ┬а ┬а ┬а className="btn-paginacion"
┬а ┬а ┬а ┬а >
┬а ┬а ┬а ┬а ┬а Siguiente &gt;
┬а ┬а ┬а ┬а </button>
┬а ┬а ┬а </div>

┬а ┬а ┬а {/* ­ЪД▒ Grid de personajes: Usamos la clase CSS para el 4x4 */}
┬а ┬а ┬а <div className="personajes-grid">
┬а ┬а ┬а ┬а {personajes.length === 0 ? (
┬а ┬а ┬а ┬а ┬а // ­ЪЪЦ No hay resultados
┬а ┬а ┬а ┬а ┬а <div style={{ gridColumn: '1 / -1', textAlign: 'center' }}>
┬а ┬а ┬а ┬а ┬а ┬а <p style={{ fontSize: '20px', color: '#ff66d0' }}>Nadie coincide con esa b├║squeda en este universo.</p>
┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ) : (
┬а ┬а ┬а ┬а ┬а // ­ЪЪЕ Renderizamos las tarjetas
┬а ┬а ┬а ┬а ┬а personajes.map((personaje) => (
┬а ┬а ┬а ┬а ┬а ┬а <div
┬а ┬а ┬а ┬а ┬а ┬а ┬а key={personaje.id}
┬а ┬а ┬а ┬а ┬а ┬а ┬а className="tarjeta-personaje" 
┬а ┬а ┬а ┬а ┬а ┬а >
┬а ┬а ┬а ┬а ┬а ┬а ┬а <img
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а src={personaje.image}
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а alt={personaje.name}
┬а ┬а ┬а ┬а ┬а ┬а ┬а />
┬а ┬а ┬а ┬а ┬а ┬а ┬а <h3>{personaje.name}</h3>
┬а ┬а ┬а ┬а ┬а ┬а ┬а <p>{personaje.species}</p>
┬а ┬а ┬а ┬а ┬а ┬а ┬а <p style={{ fontSize: '14px', color: '#c5f850', fontWeight: 'bold' }}>
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а {personaje.status}
┬а ┬а ┬а ┬а ┬а ┬а ┬а </p>
┬а ┬а ┬а ┬а ┬а ┬а </div>
┬а ┬а ┬а ┬а ┬а ))
┬а ┬а ┬а ┬а )}
┬а ┬а ┬а </div>

┬а ┬а ┬а {/* ­ЪЊё Paginaci├│n inferior */}
┬а ┬а ┬а <div className="paginacion-contenedor">
┬а ┬а ┬а ┬а <button
┬а ┬а ┬а ┬а ┬а onClick={() => setPaginaActual((prev) => Math.max(prev - 1, 1))}
┬а ┬а ┬а ┬а ┬а disabled={paginaActual === 1}
┬а ┬а ┬а ┬а ┬а className="btn-paginacion"
┬а ┬а ┬а ┬а >
┬а ┬а ┬а ┬а ┬а &lt; Anterior
┬а ┬а ┬а ┬а </button>

┬а ┬а ┬а ┬а <span className="texto-paginacion">
┬а ┬а ┬а ┬а ┬а P├Аgina {paginaActual} de {totalPaginas}
┬а ┬а ┬а ┬а </span>

┬а ┬а ┬а ┬а <button
┬а ┬а ┬а ┬а ┬а onClick={() => setPaginaActual((prev) => Math.min(prev + 1, totalPaginas))}
┬а ┬а ┬а ┬а ┬а disabled={paginaActual === totalPaginas}
┬а ┬а ┬а ┬а ┬а className="btn-paginacion"
┬а ┬а ┬а ┬а >
┬а ┬а ┬а ┬а ┬а Siguiente &gt;
┬а ┬а ┬а ┬а </button>
┬а ┬а ┬а </div>
┬а ┬а </div>
┬а );
}

export default App;